<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on arvchristos</title><link>/tags/c/</link><description>Recent content in c on arvchristos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>VirtIO Paravirtualized cryptographic character device for QEMU-KVM</title><link>/project/virtio_paravirt_crypto_char_device/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>/project/virtio_paravirt_crypto_char_device/</guid><description>VirtIO Paravirtualized cryptographic character device for QEMU-KVM for Operating Systems Laboratory course of Electrical and Computer Engineering School of NTUA Athens. You can find the project code on GitHub
This exercise contains paradigm code for the implementation of a paravirtualized character device that exports the native /dev/crypto device of cryptodev to a QEMU VM.
Client-server chat over TCP/IP sockets (/no_encryption) For testing purposes, we first implement a simple chat system based on the client-server architecture, using TCP/IP UNIX sockets.</description></item><item><title>Wireless mesh sensor network driver</title><link>/project/wireless_mesh_driver/</link><pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate><guid>/project/wireless_mesh_driver/</guid><description>Wirlesh mesh sensor character device driver for Operating Systems Laboratory course of Electrical and Computer Engineering School of NTUA Athens. You can find the project code on GitHub
This exercise contains the implementation of a character device driver for a wireless network of sensors. Those sensors are connected in a mesh network and provide data to e central collecting station. Each of those sensors collects brightness, temperature as well as sensor battery voltage levels.</description></item></channel></rss>